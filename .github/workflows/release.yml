name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  Release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: v${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install pip and poetry
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          echo "::set-env name=PATH::$HOME/.poetry/bin:$PATH"

      - name: Configure poetry
        shell: bash
        run: poetry config repositories.testpypi https://test.pypi.org/legacy/

      - name: Install dependencies
        shell: bash
        run: poetry install --no-dev

      - name: Build project for distribution
        shell: bash
        run: poetry build

      - name: Publish to PyPI
        shell: bash
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish

      - name: Upload release sdist asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/ViralPyCmdParser-${{ steps.tag.outputs.tag }}.tar.gz
          asset_name: ViralPyCmdParser-${{ steps.tag.outputs.tag }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload release wheel asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/ViralPyCmdParser-${{ steps.tag.outputs.tag }}-py3-none-any.whl
          asset_name: ViralPyCmdParser-${{ steps.tag.outputs.tag }}-py3-none-any.whl
          asset_content_type: application/gzip
